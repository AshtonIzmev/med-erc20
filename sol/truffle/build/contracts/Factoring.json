{
  "contractName": "Factoring",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "medToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fpToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "getSubscription",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSubscriptionLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isSuscribed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "invoiceAmount_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower_",
          "type": "address"
        }
      ],
      "name": "sellInvoice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "validateInvoice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "payInvoice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getProduct",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"medToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fpToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getProduct\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscriptionLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isSuscribed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"payInvoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"invoiceAmount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower_\",\"type\":\"address\"}],\"name\":\"sellInvoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"validateInvoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"AshtonIzmev\",\"details\":\"Banking smart contracts - Factoring\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"param minimumAmount      minimum amount deposited param dayDuration        duration of the DAT (in days) param interestRate       interest rate of the DAT\"},\"payInvoice(uint256)\":{\"notice\":\"Pay the owner of the FP NFT invoice representation\"},\"sellInvoice(uint256,address)\":{\"notice\":\"Get a token in exchange of an invoice\"},\"validateInvoice(uint256)\":{\"notice\":\"Get a token in exchange of an invoice\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/Factoring.sol\":\"Factoring\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/Factoring.sol\":{\"keccak256\":\"0x21f7fe05a9e73429931d5b614b83eaedfb3e30188086c4a865b3b75f85f74a03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a3b4a0e51ae932d7947f3a8c7f5ebb46aa540c2fbdc04e28f79a23dade56fed\",\"dweb:/ipfs/QmYHrguTiPtwC9KDbhouemR6GHd48J6SCyomwDYb7by54e\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/GenericProduct.sol\":{\"keccak256\":\"0xf9b0d6452d57eb155693c15b561304e758043b59eeb8496a44f354d08f57952f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f18c2941ef329c184f2b6b43a7d5ca5b13403bb22223bcf83bec3c2951a8763\",\"dweb:/ipfs/QmPGCJ5nhKaHC3ELD9jQR52v1Zs6YVCXPyBzx8cPdVVNPs\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/med/MED.sol\":{\"keccak256\":\"0x3e9d1312297027593dd7db1e7464b20d456342447bcc00725dfa960bc56b32db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30b20eeaef014ea11a5116cb2cbe7ff15365608d2f596408f48bd104b4206161\",\"dweb:/ipfs/QmYrPrqHjuN7jxdViuGEtJ6jo82AFb3NFSJEdPz2rZ887i\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/token/nft/FP.sol\":{\"keccak256\":\"0x788371562ef5beb9d699f31043ec57fedddc947994e765b546cbe20583c8c34e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://896832b867c29a75725f605d390ef0bf1b5600a835fd8c5fb4b3598ad8f220f9\",\"dweb:/ipfs/Qmc6ShxJDT4bJNQSLcpVmQuJcEANxYuK4PVWseW76giXdB\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xd3f231a05686a49cf949c85df6dd3e2a747d20bcfd0d846afc1dd8e5696444e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c66d2ecbee7159a331e2bdec3d6229587f5f05ca4ff50b29401a271e78770162\",\"dweb:/ipfs/QmUVbQyfKfRAoLuoFtd4UuYkdwDzyNR1Yc3nwCwbhGF47C\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/home/issam/git/med-erc20/sol/truffle/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620015633803806200156383398181016040528101906200003791906200012f565b620000476200011060201b60201c565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001be565b600033905090565b6000815190506200012981620001a4565b92915050565b600080604083850312156200014357600080fd5b6000620001538582860162000118565b9250506020620001668582860162000118565b9150509250929050565b60006200017d8262000184565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001af8162000170565b8114620001bb57600080fd5b50565b61139580620001ce6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063839db9c01161005b578063839db9c0146100d8578063ac60a6cd14610108578063b9db15b414610124578063dc311dd3146101575761007d565b80632530ea71146100825780632e9853ec146100a05780633b56c4c7146100bc575b600080fd5b61008a610187565b604051610097919061117f565b60405180910390f35b6100ba60048036038101906100b59190610f3b565b610198565b005b6100d660048036038101906100d19190610ee9565b610455565b005b6100f260048036038101906100ed9190610ee9565b610698565b6040516100ff91906110e4565b60405180910390f35b610122600480360381019061011d9190610ee9565b6106b5565b005b61013e60048036038101906101399190610ee9565b610a28565b60405161014e949392919061109f565b60405180910390f35b610171600480360381019061016c9190610ee9565b610ac6565b60405161017e919061117f565b60405180910390f35b60006101936003610b2e565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635edfe0df6101de610b43565b60016040518363ffffffff1660e01b81526004016101fd929190611076565b600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663561892366040518163ffffffff1660e01b815260040160206040518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610f12565b905060405180608001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380477a4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036057600080fd5b505afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610f12565b8152602001848152602001600015158152506005600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505061044f816003610b4b90919063ffffffff16565b50505050565b61045e81610698565b61049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061115f565b60405180910390fd5b6000600560008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905061054c610b43565b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b49061111f565b60405180910390fd5b6040518060800160405280826000015173ffffffffffffffffffffffffffffffffffffffff1681526020018260200151815260200182604001518152602001600115158152506005600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050505050565b60006106ae826003610b6590919063ffffffff16565b9050919050565b6106be81610698565b6106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f49061115f565b60405180910390fd5b6000600560008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090506107ac610b43565b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461081d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108149061113f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610861610b43565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016108bc919061117f565b60206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190610e97565b84604001516040518463ffffffff1660e01b815260040161092f9392919061103f565b602060405180830381600087803b15801561094957600080fd5b505af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190610ec0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639d118770836040518263ffffffff1660e01b81526004016109dd919061117f565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b50505050610a23826003610b7f90919063ffffffff16565b505050565b6000806000806005600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560008781526020019081526020016000206001015460056000888152602001908152602001600020600201546005600089815260200190815260200160002060030160009054906101000a900460ff1693509350935093509193509193565b6000610ad26003610b2e565b8210610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a906110ff565b60405180910390fd5b610b27826003610b9990919063ffffffff16565b9050919050565b6000610b3c82600001610bb3565b9050919050565b600033905090565b6000610b5d836000018360001b610bc4565b905092915050565b6000610b77836000018360001b610c34565b905092915050565b6000610b91836000018360001b610c57565b905092915050565b6000610ba88360000183610ddd565b60001c905092915050565b600081600001805490509050919050565b6000610bd08383610c34565b610c29578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610c2e565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114610dd1576000600182610c8991906111ab565b9050600060018660000180549050610ca191906111ab565b9050818114610d5c576000866000018281548110610ce8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110610d32577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610d96577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610dd7565b60009150505b92915050565b6000826000018281548110610e1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600081359050610e3d8161131a565b92915050565b600081519050610e528161131a565b92915050565b600081519050610e6781611331565b92915050565b600081359050610e7c81611348565b92915050565b600081519050610e9181611348565b92915050565b600060208284031215610ea957600080fd5b6000610eb784828501610e43565b91505092915050565b600060208284031215610ed257600080fd5b6000610ee084828501610e58565b91505092915050565b600060208284031215610efb57600080fd5b6000610f0984828501610e6d565b91505092915050565b600060208284031215610f2457600080fd5b6000610f3284828501610e82565b91505092915050565b60008060408385031215610f4e57600080fd5b6000610f5c85828601610e6d565b9250506020610f6d85828601610e2e565b9150509250929050565b610f80816111df565b82525050565b610f8f816111f1565b82525050565b610f9e81611235565b82525050565b6000610fb1600c8361119a565b9150610fbc82611276565b602082019050919050565b6000610fd4601a8361119a565b9150610fdf8261129f565b602082019050919050565b6000610ff760158361119a565b9150611002826112c8565b602082019050919050565b600061101a601f8361119a565b9150611025826112f1565b602082019050919050565b6110398161122b565b82525050565b60006060820190506110546000830186610f77565b6110616020830185610f77565b61106e6040830184611030565b949350505050565b600060408201905061108b6000830185610f77565b6110986020830184610f95565b9392505050565b60006080820190506110b46000830187610f77565b6110c16020830186611030565b6110ce6040830185611030565b6110db6060830184610f86565b95945050505050565b60006020820190506110f96000830184610f86565b92915050565b6000602082019050818103600083015261111881610fa4565b9050919050565b6000602082019050818103600083015261113881610fc7565b9050919050565b6000602082019050818103600083015261115881610fea565b9050919050565b600060208201905081810360008301526111788161100d565b9050919050565b60006020820190506111946000830184611030565b92915050565b600082825260208201905092915050565b60006111b68261122b565b91506111c18361122b565b9250828210156111d4576111d3611247565b5b828203905092915050565b60006111ea8261120b565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611240826111fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f496478206f766572666c6f770000000000000000000000000000000000000000600082015250565b7f4f6e6c7920626f72726f7765722063616e2076616c6964617465000000000000600082015250565b7f4f6e6c7920626f72726f7765722063616e207061790000000000000000000000600082015250565b7f4578697374696e6720466163746f72696e6720737562736372697074696f6e00600082015250565b611323816111df565b811461132e57600080fd5b50565b61133a816111f1565b811461134557600080fd5b50565b6113518161122b565b811461135c57600080fd5b5056fea2646970667358221220ea9ef70f3a9f9e5c72504964dacea8913e967697e9307099c2e443b19f14f5b064736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063839db9c01161005b578063839db9c0146100d8578063ac60a6cd14610108578063b9db15b414610124578063dc311dd3146101575761007d565b80632530ea71146100825780632e9853ec146100a05780633b56c4c7146100bc575b600080fd5b61008a610187565b604051610097919061117f565b60405180910390f35b6100ba60048036038101906100b59190610f3b565b610198565b005b6100d660048036038101906100d19190610ee9565b610455565b005b6100f260048036038101906100ed9190610ee9565b610698565b6040516100ff91906110e4565b60405180910390f35b610122600480360381019061011d9190610ee9565b6106b5565b005b61013e60048036038101906101399190610ee9565b610a28565b60405161014e949392919061109f565b60405180910390f35b610171600480360381019061016c9190610ee9565b610ac6565b60405161017e919061117f565b60405180910390f35b60006101936003610b2e565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635edfe0df6101de610b43565b60016040518363ffffffff1660e01b81526004016101fd929190611076565b600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663561892366040518163ffffffff1660e01b815260040160206040518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610f12565b905060405180608001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380477a4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036057600080fd5b505afa158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610f12565b8152602001848152602001600015158152506005600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505061044f816003610b4b90919063ffffffff16565b50505050565b61045e81610698565b61049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061115f565b60405180910390fd5b6000600560008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905061054c610b43565b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b49061111f565b60405180910390fd5b6040518060800160405280826000015173ffffffffffffffffffffffffffffffffffffffff1681526020018260200151815260200182604001518152602001600115158152506005600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050505050565b60006106ae826003610b6590919063ffffffff16565b9050919050565b6106be81610698565b6106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f49061115f565b60405180910390fd5b6000600560008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090506107ac610b43565b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461081d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108149061113f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610861610b43565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016108bc919061117f565b60206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190610e97565b84604001516040518463ffffffff1660e01b815260040161092f9392919061103f565b602060405180830381600087803b15801561094957600080fd5b505af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190610ec0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639d118770836040518263ffffffff1660e01b81526004016109dd919061117f565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b50505050610a23826003610b7f90919063ffffffff16565b505050565b6000806000806005600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560008781526020019081526020016000206001015460056000888152602001908152602001600020600201546005600089815260200190815260200160002060030160009054906101000a900460ff1693509350935093509193509193565b6000610ad26003610b2e565b8210610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a906110ff565b60405180910390fd5b610b27826003610b9990919063ffffffff16565b9050919050565b6000610b3c82600001610bb3565b9050919050565b600033905090565b6000610b5d836000018360001b610bc4565b905092915050565b6000610b77836000018360001b610c34565b905092915050565b6000610b91836000018360001b610c57565b905092915050565b6000610ba88360000183610ddd565b60001c905092915050565b600081600001805490509050919050565b6000610bd08383610c34565b610c29578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610c2e565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114610dd1576000600182610c8991906111ab565b9050600060018660000180549050610ca191906111ab565b9050818114610d5c576000866000018281548110610ce8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110610d32577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610d96577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610dd7565b60009150505b92915050565b6000826000018281548110610e1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600081359050610e3d8161131a565b92915050565b600081519050610e528161131a565b92915050565b600081519050610e6781611331565b92915050565b600081359050610e7c81611348565b92915050565b600081519050610e9181611348565b92915050565b600060208284031215610ea957600080fd5b6000610eb784828501610e43565b91505092915050565b600060208284031215610ed257600080fd5b6000610ee084828501610e58565b91505092915050565b600060208284031215610efb57600080fd5b6000610f0984828501610e6d565b91505092915050565b600060208284031215610f2457600080fd5b6000610f3284828501610e82565b91505092915050565b60008060408385031215610f4e57600080fd5b6000610f5c85828601610e6d565b9250506020610f6d85828601610e2e565b9150509250929050565b610f80816111df565b82525050565b610f8f816111f1565b82525050565b610f9e81611235565b82525050565b6000610fb1600c8361119a565b9150610fbc82611276565b602082019050919050565b6000610fd4601a8361119a565b9150610fdf8261129f565b602082019050919050565b6000610ff760158361119a565b9150611002826112c8565b602082019050919050565b600061101a601f8361119a565b9150611025826112f1565b602082019050919050565b6110398161122b565b82525050565b60006060820190506110546000830186610f77565b6110616020830185610f77565b61106e6040830184611030565b949350505050565b600060408201905061108b6000830185610f77565b6110986020830184610f95565b9392505050565b60006080820190506110b46000830187610f77565b6110c16020830186611030565b6110ce6040830185611030565b6110db6060830184610f86565b95945050505050565b60006020820190506110f96000830184610f86565b92915050565b6000602082019050818103600083015261111881610fa4565b9050919050565b6000602082019050818103600083015261113881610fc7565b9050919050565b6000602082019050818103600083015261115881610fea565b9050919050565b600060208201905081810360008301526111788161100d565b9050919050565b60006020820190506111946000830184611030565b92915050565b600082825260208201905092915050565b60006111b68261122b565b91506111c18361122b565b9250828210156111d4576111d3611247565b5b828203905092915050565b60006111ea8261120b565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611240826111fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f496478206f766572666c6f770000000000000000000000000000000000000000600082015250565b7f4f6e6c7920626f72726f7765722063616e2076616c6964617465000000000000600082015250565b7f4f6e6c7920626f72726f7765722063616e207061790000000000000000000000600082015250565b7f4578697374696e6720466163746f72696e6720737562736372697074696f6e00600082015250565b611323816111df565b811461132e57600080fd5b50565b61133a816111f1565b811461134557600080fd5b50565b6113518161122b565b811461135c57600080fd5b5056fea2646970667358221220ea9ef70f3a9f9e5c72504964dacea8913e967697e9307099c2e443b19f14f5b064736f6c63430008030033",
  "immutableReferences": {},
  "sourceMap": "165:2349:9:-:0;;;657:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;732:12;:10;;;:12;;:::i;:::-;717;;:27;;;;;;;;;;;;;;;;;;769:9;754:8;;:25;;;;;;;;;;;;;;;;;;802:8;789:7;;:22;;;;;;;;;;;;;;;;;;657:161;;165:2349;;586:96:16;639:7;665:10;658:17;;586:96;:::o;7:143:22:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:440::-;;;292:2;280:9;271:7;267:23;263:32;260:2;;;308:1;305;298:12;260:2;351:1;376:64;432:7;423:6;412:9;408:22;376:64;:::i;:::-;366:74;;322:128;489:2;515:64;571:7;562:6;551:9;547:22;515:64;:::i;:::-;505:74;;460:129;250:346;;;;;:::o;602:96::-;;668:24;686:5;668:24;:::i;:::-;657:35;;647:51;;;:::o;704:126::-;;781:42;774:5;770:54;759:65;;749:81;;;:::o;836:122::-;909:24;927:5;909:24;:::i;:::-;902:5;899:35;889:2;;948:1;945;938:12;889:2;879:79;:::o;165:2349:9:-;;;;;;;",
  "deployedSourceMap": "165:2349:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:120:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:322:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1274:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;676:131:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1748:432:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2186:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;813:190:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1009:120;1071:7;1097:25;:16;:23;:25::i;:::-;1090:32;;1009:120;:::o;885:322:9:-;974:7;;;;;;;;;;;:14;;;989:12;:10;:12::i;:::-;1003:1;974:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:15;1033:7;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1015:45;;1096:65;;;;;;;;1104:9;1096:65;;;;;;1115:8;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1096:65;;;;1139:14;1096:65;;;;1155:5;1096:65;;;;;1070:14;:23;1085:7;1070:23;;;;;;;;;;;:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:29;1192:7;1171:16;:20;;:29;;;;:::i;:::-;;885:322;;;:::o;1274:394::-;1349:20;1361:7;1349:11;:20::i;:::-;1341:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1415:19;1437:14;:23;1452:7;1437:23;;;;;;;;;;;1415:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:12;:10;:12::i;:::-;1478:30;;:4;:14;;;:30;;;1470:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1588:73;;;;;;;;1596:4;:14;;;1588:73;;;;;;1612:4;:19;;;1588:73;;;;1633:4;:21;;;1588:73;;;;1656:4;1588:73;;;;;1549:14;:23;1564:7;1549:23;;;;;;;;;;;:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:394;;:::o;676:131:10:-;743:4;766:34;792:7;766:16;:25;;:34;;;;:::i;:::-;759:41;;676:131;;;:::o;1748:432:9:-;1818:20;1830:7;1818:11;:20::i;:::-;1810:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1884:19;1906:14;:23;1921:7;1906:23;;;;;;;;;;;1884:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:12;:10;:12::i;:::-;1947:30;;:4;:14;;;:30;;;1939:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2013:8;;;;;;;;;;:21;;;2035:12;:10;:12::i;:::-;2049:7;;;;;;;;;;;:15;;;2065:7;2049:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2075:4;:21;;;2013:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2107:7;;;;;;;;;;;:15;;;2123:7;2107:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:32;2165:7;2141:16;:23;;:32;;;;:::i;:::-;;1748:432;;:::o;2186:325::-;2252:7;2261;2270;2279:4;2316:14;:23;2331:7;2316:23;;;;;;;;;;;:33;;;;;;;;;;;;2363:14;:23;2378:7;2363:23;;;;;;;;;;;:38;;;2415:14;:23;2430:7;2415:23;;;;;;;;;;;:40;;;2469:14;:23;2484:7;2469:23;;;;;;;;;;;:34;;;;;;;;;;;;2295:209;;;;;;;;2186:325;;;;;:::o;813:190:10:-;880:7;913:25;:16;:23;:25::i;:::-;907:3;:31;899:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;972:24;992:3;972:16;:19;;:24;;;;:::i;:::-;965:31;;813:190;;;:::o;8579:112:18:-;8639:7;8665:19;8673:3;:10;;8665:7;:19::i;:::-;8658:26;;8579:112;;;:::o;586:96:16:-;639:7;665:10;658:17;;586:96;:::o;7841:129:18:-;7908:4;7931:32;7936:3;:10;;7956:5;7948:14;;7931:4;:32::i;:::-;7924:39;;7841:129;;;;:::o;8354:144::-;8431:4;8454:37;8464:3;:10;;8484:5;8476:14;;8454:9;:37::i;:::-;8447:44;;8354:144;;;;:::o;8138:135::-;8208:4;8231:35;8239:3;:10;;8259:5;8251:14;;8231:7;:35::i;:::-;8224:42;;8138:135;;;;:::o;9023:::-;9094:7;9128:22;9132:3;:10;;9144:5;9128:3;:22::i;:::-;9120:31;;9113:38;;9023:135;;;;:::o;3869:107::-;3925:7;3951:3;:11;;:18;;;;3944:25;;3869:107;;;:::o;1632:404::-;1695:4;1716:21;1726:3;1731:5;1716:9;:21::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;3661:127::-;3734:4;3780:1;3757:3;:12;;:19;3770:5;3757:19;;;;;;;;;;;;:24;;3750:31;;3661:127;;;;:::o;2204:1376::-;2270:4;2386:18;2407:3;:12;;:19;2420:5;2407:19;;;;;;;;;;;;2386:40;;2455:1;2441:10;:15;2437:1137;;2798:21;2835:1;2822:10;:14;;;;:::i;:::-;2798:38;;2850:17;2891:1;2870:3;:11;;:18;;;;:22;;;;:::i;:::-;2850:42;;2924:13;2911:9;:26;2907:398;;2957:17;2977:3;:11;;2989:9;2977:22;;;;;;;;;;;;;;;;;;;;;;;;2957:42;;3128:9;3099:3;:11;;3111:13;3099:26;;;;;;;;;;;;;;;;;;;;;;;:38;;;;3237:10;3211:3;:12;;:23;3224:9;3211:23;;;;;;;;;;;:36;;;;2907:398;;3383:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3475:3;:12;;:19;3488:5;3475:19;;;;;;;;;;;3468:26;;;3516:4;3509:11;;;;;;;2437:1137;3558:5;3551:12;;;2204:1376;;;;;:::o;4308:118::-;4375:7;4401:3;:11;;4413:5;4401:18;;;;;;;;;;;;;;;;;;;;;;;;4394:25;;4308:118;;;;:::o;7:139:22:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:137::-;;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;361:77;;;;:::o;444:139::-;;528:6;515:20;506:29;;544:33;571:5;544:33;:::i;:::-;496:87;;;;:::o;589:143::-;;677:6;671:13;662:22;;693:33;720:5;693:33;:::i;:::-;652:80;;;;:::o;738:284::-;;857:2;845:9;836:7;832:23;828:32;825:2;;;873:1;870;863:12;825:2;916:1;941:64;997:7;988:6;977:9;973:22;941:64;:::i;:::-;931:74;;887:128;815:207;;;;:::o;1028:278::-;;1144:2;1132:9;1123:7;1119:23;1115:32;1112:2;;;1160:1;1157;1150:12;1112:2;1203:1;1228:61;1281:7;1272:6;1261:9;1257:22;1228:61;:::i;:::-;1218:71;;1174:125;1102:204;;;;:::o;1312:262::-;;1420:2;1408:9;1399:7;1395:23;1391:32;1388:2;;;1436:1;1433;1426:12;1388:2;1479:1;1504:53;1549:7;1540:6;1529:9;1525:22;1504:53;:::i;:::-;1494:63;;1450:117;1378:196;;;;:::o;1580:284::-;;1699:2;1687:9;1678:7;1674:23;1670:32;1667:2;;;1715:1;1712;1705:12;1667:2;1758:1;1783:64;1839:7;1830:6;1819:9;1815:22;1783:64;:::i;:::-;1773:74;;1729:128;1657:207;;;;:::o;1870:407::-;;;1995:2;1983:9;1974:7;1970:23;1966:32;1963:2;;;2011:1;2008;2001:12;1963:2;2054:1;2079:53;2124:7;2115:6;2104:9;2100:22;2079:53;:::i;:::-;2069:63;;2025:117;2181:2;2207:53;2252:7;2243:6;2232:9;2228:22;2207:53;:::i;:::-;2197:63;;2152:118;1953:324;;;;;:::o;2283:118::-;2370:24;2388:5;2370:24;:::i;:::-;2365:3;2358:37;2348:53;;:::o;2407:109::-;2488:21;2503:5;2488:21;:::i;:::-;2483:3;2476:34;2466:50;;:::o;2522:145::-;2616:44;2654:5;2616:44;:::i;:::-;2611:3;2604:57;2594:73;;:::o;2673:366::-;;2836:67;2900:2;2895:3;2836:67;:::i;:::-;2829:74;;2912:93;3001:3;2912:93;:::i;:::-;3030:2;3025:3;3021:12;3014:19;;2819:220;;;:::o;3045:366::-;;3208:67;3272:2;3267:3;3208:67;:::i;:::-;3201:74;;3284:93;3373:3;3284:93;:::i;:::-;3402:2;3397:3;3393:12;3386:19;;3191:220;;;:::o;3417:366::-;;3580:67;3644:2;3639:3;3580:67;:::i;:::-;3573:74;;3656:93;3745:3;3656:93;:::i;:::-;3774:2;3769:3;3765:12;3758:19;;3563:220;;;:::o;3789:366::-;;3952:67;4016:2;4011:3;3952:67;:::i;:::-;3945:74;;4028:93;4117:3;4028:93;:::i;:::-;4146:2;4141:3;4137:12;4130:19;;3935:220;;;:::o;4161:118::-;4248:24;4266:5;4248:24;:::i;:::-;4243:3;4236:37;4226:53;;:::o;4285:442::-;;4472:2;4461:9;4457:18;4449:26;;4485:71;4553:1;4542:9;4538:17;4529:6;4485:71;:::i;:::-;4566:72;4634:2;4623:9;4619:18;4610:6;4566:72;:::i;:::-;4648;4716:2;4705:9;4701:18;4692:6;4648:72;:::i;:::-;4439:288;;;;;;:::o;4733:346::-;;4899:2;4888:9;4884:18;4876:26;;4912:71;4980:1;4969:9;4965:17;4956:6;4912:71;:::i;:::-;4993:79;5068:2;5057:9;5053:18;5044:6;4993:79;:::i;:::-;4866:213;;;;;:::o;5085:541::-;;5294:3;5283:9;5279:19;5271:27;;5308:71;5376:1;5365:9;5361:17;5352:6;5308:71;:::i;:::-;5389:72;5457:2;5446:9;5442:18;5433:6;5389:72;:::i;:::-;5471;5539:2;5528:9;5524:18;5515:6;5471:72;:::i;:::-;5553:66;5615:2;5604:9;5600:18;5591:6;5553:66;:::i;:::-;5261:365;;;;;;;:::o;5632:210::-;;5757:2;5746:9;5742:18;5734:26;;5770:65;5832:1;5821:9;5817:17;5808:6;5770:65;:::i;:::-;5724:118;;;;:::o;5848:419::-;;6052:2;6041:9;6037:18;6029:26;;6101:9;6095:4;6091:20;6087:1;6076:9;6072:17;6065:47;6129:131;6255:4;6129:131;:::i;:::-;6121:139;;6019:248;;;:::o;6273:419::-;;6477:2;6466:9;6462:18;6454:26;;6526:9;6520:4;6516:20;6512:1;6501:9;6497:17;6490:47;6554:131;6680:4;6554:131;:::i;:::-;6546:139;;6444:248;;;:::o;6698:419::-;;6902:2;6891:9;6887:18;6879:26;;6951:9;6945:4;6941:20;6937:1;6926:9;6922:17;6915:47;6979:131;7105:4;6979:131;:::i;:::-;6971:139;;6869:248;;;:::o;7123:419::-;;7327:2;7316:9;7312:18;7304:26;;7376:9;7370:4;7366:20;7362:1;7351:9;7347:17;7340:47;7404:131;7530:4;7404:131;:::i;:::-;7396:139;;7294:248;;;:::o;7548:222::-;;7679:2;7668:9;7664:18;7656:26;;7692:71;7760:1;7749:9;7745:17;7736:6;7692:71;:::i;:::-;7646:124;;;;:::o;7776:169::-;;7894:6;7889:3;7882:19;7934:4;7929:3;7925:14;7910:29;;7872:73;;;;:::o;7951:191::-;;8011:20;8029:1;8011:20;:::i;:::-;8006:25;;8045:20;8063:1;8045:20;:::i;:::-;8040:25;;8084:1;8081;8078:8;8075:2;;;8089:18;;:::i;:::-;8075:2;8134:1;8131;8127:9;8119:17;;7996:146;;;;:::o;8148:96::-;;8214:24;8232:5;8214:24;:::i;:::-;8203:35;;8193:51;;;:::o;8250:90::-;;8327:5;8320:13;8313:21;8302:32;;8292:48;;;:::o;8346:89::-;;8422:6;8415:5;8411:18;8400:29;;8390:45;;;:::o;8441:126::-;;8518:42;8511:5;8507:54;8496:65;;8486:81;;;:::o;8573:77::-;;8639:5;8628:16;;8618:32;;;:::o;8656:119::-;;8746:23;8763:5;8746:23;:::i;:::-;8733:36;;8723:52;;;:::o;8781:180::-;8829:77;8826:1;8819:88;8926:4;8923:1;8916:15;8950:4;8947:1;8940:15;8967:162;9107:14;9103:1;9095:6;9091:14;9084:38;9073:56;:::o;9135:176::-;9275:28;9271:1;9263:6;9259:14;9252:52;9241:70;:::o;9317:171::-;9457:23;9453:1;9445:6;9441:14;9434:47;9423:65;:::o;9494:181::-;9634:33;9630:1;9622:6;9618:14;9611:57;9600:75;:::o;9681:122::-;9754:24;9772:5;9754:24;:::i;:::-;9747:5;9744:35;9734:2;;9793:1;9790;9783:12;9734:2;9724:79;:::o;9809:116::-;9879:21;9894:5;9879:21;:::i;:::-;9872:5;9869:32;9859:2;;9915:1;9912;9905:12;9859:2;9849:76;:::o;9931:122::-;10004:24;10022:5;10004:24;:::i;:::-;9997:5;9994:35;9984:2;;10043:1;10040;10033:12;9984:2;9974:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./GenericProduct.sol\";\n\n/**\n * @dev Banking smart contracts - Factoring\n * @author AshtonIzmev\n */\ncontract Factoring is GenericProduct {\n\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    struct Product {\n        address _borrower;\n        uint256 _factoringDate;\n        uint256 _factoringAmount;\n        bool _validated;\n    }\n\n    mapping (uint256 => Product) private _subscriptions;\n\n    /**\n     * param minimumAmount      minimum amount deposited\n     * param dayDuration        duration of the DAT (in days)\n     * param interestRate       interest rate of the DAT\n     */\n    constructor (address medToken_, address fpToken_) {\n        _issuingBank = _msgSender();\n        medToken = MED(medToken_);\n        fpToken = FP(fpToken_);\n    }\n\n    /**\n     * Get a token in exchange of an invoice\n     */\n    function sellInvoice(uint256 invoiceAmount_, address borrower_) public virtual {\n        fpToken.create(_msgSender(), 1);\n        uint256 tokenId = fpToken.getCurrentTokenId();\n        _subscriptions[tokenId] = Product(borrower_, medToken.daysElapsed(), invoiceAmount_, false);\n        _subscriptionIds.add(tokenId);\n    }\n\n    /**\n     * Get a token in exchange of an invoice\n     */\n    function validateInvoice(uint256 tokenId) public virtual {\n        require(isSuscribed(tokenId), \"Existing Factoring subscription\");\n        Product memory prod = _subscriptions[tokenId];\n        require(prod._borrower == _msgSender(), \"Only borrower can validate\");\n        _subscriptions[tokenId] = \n            Product(prod._borrower, prod._factoringDate, prod._factoringAmount, true);\n    }\n\n    /**\n     * Pay the owner of the FP NFT invoice representation\n     */\n    function payInvoice(uint256 tokenId) public virtual {\n        require(isSuscribed(tokenId), \"Existing Factoring subscription\");\n        Product memory prod = _subscriptions[tokenId];\n        require(prod._borrower == _msgSender(), \"Only borrower can pay\");\n        medToken.transferFrom(_msgSender(), fpToken.ownerOf(tokenId), prod._factoringAmount);\n        fpToken.destroy(tokenId);\n        _subscriptionIds.remove(tokenId);\n    }\n\n    function getProduct(uint256 tokenId) public view virtual returns (address, uint256, uint256, bool) {\n        return (\n            _subscriptions[tokenId]._borrower,\n            _subscriptions[tokenId]._factoringDate,\n            _subscriptions[tokenId]._factoringAmount,\n            _subscriptions[tokenId]._validated);\n    }\n\n}",
  "sourcePath": "/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/Factoring.sol",
  "ast": {
    "absolutePath": "/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/Factoring.sol",
    "exportedSymbols": {
      "Address": [
        3948
      ],
      "Context": [
        3971
      ],
      "Counters": [
        4032
      ],
      "ERC165": [
        4768
      ],
      "ERC20": [
        564
      ],
      "ERC721": [
        1485
      ],
      "EnumerableSet": [
        4541
      ],
      "FP": [
        3652
      ],
      "Factoring": [
        2134
      ],
      "GenericProduct": [
        2216
      ],
      "IERC165": [
        4780
      ],
      "IERC20": [
        642
      ],
      "IERC20Metadata": [
        667
      ],
      "IERC721": [
        1601
      ],
      "IERC721Metadata": [
        1646
      ],
      "IERC721Receiver": [
        1619
      ],
      "MED": [
        3515
      ],
      "Strings": [
        4744
      ]
    },
    "id": 2135,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1912,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/GenericProduct.sol",
        "file": "./GenericProduct.sol",
        "id": 1913,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2135,
        "sourceUnit": 2217,
        "src": "58:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1915,
              "name": "GenericProduct",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2216,
              "src": "187:14:9"
            },
            "id": 1916,
            "nodeType": "InheritanceSpecifier",
            "src": "187:14:9"
          }
        ],
        "contractDependencies": [
          2216,
          3971
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1914,
          "nodeType": "StructuredDocumentation",
          "src": "90:74:9",
          "text": " @dev Banking smart contracts - Factoring\n @author AshtonIzmev"
        },
        "fullyImplemented": true,
        "id": 2134,
        "linearizedBaseContracts": [
          2134,
          2216,
          3971
        ],
        "name": "Factoring",
        "nameLocation": "174:9:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1920,
            "libraryName": {
              "id": 1917,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4541,
              "src": "215:13:9"
            },
            "nodeType": "UsingForDirective",
            "src": "209:46:9",
            "typeName": {
              "id": 1919,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1918,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4441,
                "src": "233:21:9"
              },
              "referencedDeclaration": 4441,
              "src": "233:21:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$4441_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "canonicalName": "Factoring.Product",
            "id": 1929,
            "members": [
              {
                "constant": false,
                "id": 1922,
                "mutability": "mutable",
                "name": "_borrower",
                "nameLocation": "294:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "286:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1921,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1924,
                "mutability": "mutable",
                "name": "_factoringDate",
                "nameLocation": "321:14:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "313:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1923,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1926,
                "mutability": "mutable",
                "name": "_factoringAmount",
                "nameLocation": "353:16:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "345:24:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1925,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "345:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1928,
                "mutability": "mutable",
                "name": "_validated",
                "nameLocation": "384:10:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "379:15:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1927,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Product",
            "nameLocation": "268:7:9",
            "nodeType": "StructDefinition",
            "scope": 2134,
            "src": "261:140:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1934,
            "mutability": "mutable",
            "name": "_subscriptions",
            "nameLocation": "444:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 2134,
            "src": "407:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
              "typeString": "mapping(uint256 => struct Factoring.Product)"
            },
            "typeName": {
              "id": 1933,
              "keyType": {
                "id": 1930,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "407:28:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                "typeString": "mapping(uint256 => struct Factoring.Product)"
              },
              "valueType": {
                "id": 1932,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1931,
                  "name": "Product",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1929,
                  "src": "427:7:9"
                },
                "referencedDeclaration": 1929,
                "src": "427:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Product_$1929_storage_ptr",
                  "typeString": "struct Factoring.Product"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1959,
              "nodeType": "Block",
              "src": "707:111:9",
              "statements": [
                {
                  "expression": {
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1942,
                      "name": "_issuingBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2155,
                      "src": "717:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1943,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3959,
                        "src": "732:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:12:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "717:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1946,
                  "nodeType": "ExpressionStatement",
                  "src": "717:27:9"
                },
                {
                  "expression": {
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1947,
                      "name": "medToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "754:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MED_$3515",
                        "typeString": "contract MED"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1949,
                          "name": "medToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1937,
                          "src": "769:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1948,
                        "name": "MED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3515,
                        "src": "765:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MED_$3515_$",
                          "typeString": "type(contract MED)"
                        }
                      },
                      "id": 1950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "765:14:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MED_$3515",
                        "typeString": "contract MED"
                      }
                    },
                    "src": "754:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MED_$3515",
                      "typeString": "contract MED"
                    }
                  },
                  "id": 1952,
                  "nodeType": "ExpressionStatement",
                  "src": "754:25:9"
                },
                {
                  "expression": {
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1953,
                      "name": "fpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2153,
                      "src": "789:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FP_$3652",
                        "typeString": "contract FP"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1955,
                          "name": "fpToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1939,
                          "src": "802:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1954,
                        "name": "FP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "799:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FP_$3652_$",
                          "typeString": "type(contract FP)"
                        }
                      },
                      "id": 1956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:12:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FP_$3652",
                        "typeString": "contract FP"
                      }
                    },
                    "src": "789:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FP_$3652",
                      "typeString": "contract FP"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "789:22:9"
                }
              ]
            },
            "documentation": {
              "id": 1935,
              "nodeType": "StructuredDocumentation",
              "src": "465:187:9",
              "text": " param minimumAmount      minimum amount deposited\n param dayDuration        duration of the DAT (in days)\n param interestRate       interest rate of the DAT"
            },
            "id": 1960,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1937,
                  "mutability": "mutable",
                  "name": "medToken_",
                  "nameLocation": "678:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1960,
                  "src": "670:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "fpToken_",
                  "nameLocation": "697:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1960,
                  "src": "689:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "669:37:9"
            },
            "returnParameters": {
              "id": 1941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:9"
            },
            "scope": 2134,
            "src": "657:161:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "964:243:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1971,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3959,
                          "src": "989:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "989:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1003:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 1968,
                        "name": "fpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "974:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FP_$3652",
                          "typeString": "contract FP"
                        }
                      },
                      "id": 1970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3632,
                      "src": "974:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16) external"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "974:31:9"
                },
                {
                  "assignments": [
                    1977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1977,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1023:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2001,
                      "src": "1015:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1015:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1981,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1978,
                        "name": "fpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "1033:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FP_$3652",
                          "typeString": "contract FP"
                        }
                      },
                      "id": 1979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentTokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3583,
                      "src": "1033:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1015:45:9"
                },
                {
                  "expression": {
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1982,
                        "name": "_subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "1070:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                          "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                        }
                      },
                      "id": 1984,
                      "indexExpression": {
                        "id": 1983,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1977,
                        "src": "1085:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1070:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_storage",
                        "typeString": "struct Factoring.Product storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1986,
                          "name": "borrower_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1965,
                          "src": "1104:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1987,
                              "name": "medToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "1115:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MED_$3515",
                                "typeString": "contract MED"
                              }
                            },
                            "id": 1988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "daysElapsed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3138,
                            "src": "1115:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1990,
                          "name": "invoiceAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1963,
                          "src": "1139:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1155:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1985,
                        "name": "Product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "1096:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Product_$1929_storage_ptr_$",
                          "typeString": "type(struct Factoring.Product storage pointer)"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1096:65:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product memory"
                      }
                    },
                    "src": "1070:91:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:91:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1998,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1977,
                        "src": "1192:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1995,
                        "name": "_subscriptionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "1171:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4441_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 1997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4462,
                      "src": "1171:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4441_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4441_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2000,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:29:9"
                }
              ]
            },
            "documentation": {
              "id": 1961,
              "nodeType": "StructuredDocumentation",
              "src": "824:56:9",
              "text": " Get a token in exchange of an invoice"
            },
            "functionSelector": "2e9853ec",
            "id": 2002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellInvoice",
            "nameLocation": "894:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "invoiceAmount_",
                  "nameLocation": "914:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "906:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1965,
                  "mutability": "mutable",
                  "name": "borrower_",
                  "nameLocation": "938:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "930:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:43:9"
            },
            "returnParameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:9"
            },
            "scope": 2134,
            "src": "885:322:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "1331:337:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2010,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2005,
                            "src": "1361:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2009,
                          "name": "isSuscribed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2183,
                          "src": "1349:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1349:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4578697374696e6720466163746f72696e6720737562736372697074696f6e",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        },
                        "value": "Existing Factoring subscription"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        }
                      ],
                      "id": 2008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1341:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:64:9"
                },
                {
                  "assignments": [
                    2017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "mutability": "mutable",
                      "name": "prod",
                      "nameLocation": "1430:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2045,
                      "src": "1415:19:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product"
                      },
                      "typeName": {
                        "id": 2016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2015,
                          "name": "Product",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1929,
                          "src": "1415:7:9"
                        },
                        "referencedDeclaration": 1929,
                        "src": "1415:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$1929_storage_ptr",
                          "typeString": "struct Factoring.Product"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2021,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2018,
                      "name": "_subscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "1437:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                        "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                      }
                    },
                    "id": 2020,
                    "indexExpression": {
                      "id": 2019,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2005,
                      "src": "1452:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1437:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1415:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2023,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1478:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1478:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2025,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3959,
                            "src": "1496:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1496:12:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1478:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626f72726f7765722063616e2076616c6964617465",
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1510:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58e78d0cbe6d1dcc75d8c8c33ad3d014c4c4bd822f695b3b037f71a6c6d07a36",
                          "typeString": "literal_string \"Only borrower can validate\""
                        },
                        "value": "Only borrower can validate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58e78d0cbe6d1dcc75d8c8c33ad3d014c4c4bd822f695b3b037f71a6c6d07a36",
                          "typeString": "literal_string \"Only borrower can validate\""
                        }
                      ],
                      "id": 2022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1470:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:69:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2030,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:69:9"
                },
                {
                  "expression": {
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2031,
                        "name": "_subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "1549:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                          "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                        }
                      },
                      "id": 2033,
                      "indexExpression": {
                        "id": 2032,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2005,
                        "src": "1564:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1549:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_storage",
                        "typeString": "struct Factoring.Product storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2035,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1596:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1596:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 2037,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1612:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_factoringDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1924,
                          "src": "1612:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 2039,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1633:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_factoringAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1926,
                          "src": "1633:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1656:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2034,
                        "name": "Product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "1588:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Product_$1929_storage_ptr_$",
                          "typeString": "type(struct Factoring.Product storage pointer)"
                        }
                      },
                      "id": 2042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1588:73:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product memory"
                      }
                    },
                    "src": "1549:112:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:112:9"
                }
              ]
            },
            "documentation": {
              "id": 2003,
              "nodeType": "StructuredDocumentation",
              "src": "1213:56:9",
              "text": " Get a token in exchange of an invoice"
            },
            "functionSelector": "3b56c4c7",
            "id": 2046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateInvoice",
            "nameLocation": "1283:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2005,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1307:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "1299:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:17:9"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:0:9"
            },
            "scope": 2134,
            "src": "1274:394:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2100,
              "nodeType": "Block",
              "src": "1800:380:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2054,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "1830:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2053,
                          "name": "isSuscribed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2183,
                          "src": "1818:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1818:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4578697374696e6720466163746f72696e6720737562736372697074696f6e",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        },
                        "value": "Existing Factoring subscription"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        }
                      ],
                      "id": 2052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1810:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:64:9"
                },
                {
                  "assignments": [
                    2061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2061,
                      "mutability": "mutable",
                      "name": "prod",
                      "nameLocation": "1899:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2100,
                      "src": "1884:19:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product"
                      },
                      "typeName": {
                        "id": 2060,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2059,
                          "name": "Product",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1929,
                          "src": "1884:7:9"
                        },
                        "referencedDeclaration": 1929,
                        "src": "1884:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$1929_storage_ptr",
                          "typeString": "struct Factoring.Product"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2065,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2062,
                      "name": "_subscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "1906:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                        "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                      }
                    },
                    "id": 2064,
                    "indexExpression": {
                      "id": 2063,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "1921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1906:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1884:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2067,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "1947:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1947:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2069,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3959,
                            "src": "1965:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1965:12:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1947:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626f72726f7765722063616e20706179",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1979:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1fd5effde376710ae4f92451e73ddae95c884711acb221676628408d4902985",
                          "typeString": "literal_string \"Only borrower can pay\""
                        },
                        "value": "Only borrower can pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1fd5effde376710ae4f92451e73ddae95c884711acb221676628408d4902985",
                          "typeString": "literal_string \"Only borrower can pay\""
                        }
                      ],
                      "id": 2066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1939:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:64:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2078,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3959,
                          "src": "2035:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2035:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2082,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "2065:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2080,
                            "name": "fpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "2049:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FP_$3652",
                              "typeString": "contract FP"
                            }
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "2049:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2049:24:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2084,
                          "name": "prod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2061,
                          "src": "2075:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                            "typeString": "struct Factoring.Product memory"
                          }
                        },
                        "id": 2085,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_factoringAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1926,
                        "src": "2075:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2075,
                        "name": "medToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2150,
                        "src": "2013:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MED_$3515",
                          "typeString": "contract MED"
                        }
                      },
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 263,
                      "src": "2013:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:84:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:84:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2091,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "2123:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2088,
                        "name": "fpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "2107:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FP_$3652",
                          "typeString": "contract FP"
                        }
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3651,
                      "src": "2107:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2093,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:24:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2097,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "2165:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2094,
                        "name": "_subscriptionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "2141:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4441_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2096,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4483,
                      "src": "2141:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4441_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4441_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2099,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2047,
              "nodeType": "StructuredDocumentation",
              "src": "1674:69:9",
              "text": " Pay the owner of the FP NFT invoice representation"
            },
            "functionSelector": "ac60a6cd",
            "id": 2101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payInvoice",
            "nameLocation": "1757:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1776:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2101,
                  "src": "1768:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:17:9"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:9"
            },
            "scope": 2134,
            "src": "1748:432:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2132,
              "nodeType": "Block",
              "src": "2285:226:9",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2114,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2316:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2116,
                          "indexExpression": {
                            "id": 2115,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2331:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2316:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "2316:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2118,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2363:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2120,
                          "indexExpression": {
                            "id": 2119,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2378:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2363:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_factoringDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1924,
                        "src": "2363:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2122,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2415:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2124,
                          "indexExpression": {
                            "id": 2123,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2430:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2415:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_factoringAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1926,
                        "src": "2415:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2126,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2469:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2128,
                          "indexExpression": {
                            "id": 2127,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2484:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2469:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_validated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1928,
                        "src": "2469:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2130,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2302:202:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(address,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 2113,
                  "id": 2131,
                  "nodeType": "Return",
                  "src": "2295:209:9"
                }
              ]
            },
            "functionSelector": "b9db15b4",
            "id": 2133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProduct",
            "nameLocation": "2195:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2214:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2206:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2205:17:9"
            },
            "returnParameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2252:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2261:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2270:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2279:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:33:9"
            },
            "scope": 2134,
            "src": "2186:325:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2135,
        "src": "165:2349:9"
      }
    ],
    "src": "33:2481:9"
  },
  "legacyAST": {
    "absolutePath": "/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/Factoring.sol",
    "exportedSymbols": {
      "Address": [
        3948
      ],
      "Context": [
        3971
      ],
      "Counters": [
        4032
      ],
      "ERC165": [
        4768
      ],
      "ERC20": [
        564
      ],
      "ERC721": [
        1485
      ],
      "EnumerableSet": [
        4541
      ],
      "FP": [
        3652
      ],
      "Factoring": [
        2134
      ],
      "GenericProduct": [
        2216
      ],
      "IERC165": [
        4780
      ],
      "IERC20": [
        642
      ],
      "IERC20Metadata": [
        667
      ],
      "IERC721": [
        1601
      ],
      "IERC721Metadata": [
        1646
      ],
      "IERC721Receiver": [
        1619
      ],
      "MED": [
        3515
      ],
      "Strings": [
        4744
      ]
    },
    "id": 2135,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1912,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "/home/issam/git/med-erc20/sol/truffle/contracts/token/bank/GenericProduct.sol",
        "file": "./GenericProduct.sol",
        "id": 1913,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2135,
        "sourceUnit": 2217,
        "src": "58:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1915,
              "name": "GenericProduct",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2216,
              "src": "187:14:9"
            },
            "id": 1916,
            "nodeType": "InheritanceSpecifier",
            "src": "187:14:9"
          }
        ],
        "contractDependencies": [
          2216,
          3971
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1914,
          "nodeType": "StructuredDocumentation",
          "src": "90:74:9",
          "text": " @dev Banking smart contracts - Factoring\n @author AshtonIzmev"
        },
        "fullyImplemented": true,
        "id": 2134,
        "linearizedBaseContracts": [
          2134,
          2216,
          3971
        ],
        "name": "Factoring",
        "nameLocation": "174:9:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1920,
            "libraryName": {
              "id": 1917,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4541,
              "src": "215:13:9"
            },
            "nodeType": "UsingForDirective",
            "src": "209:46:9",
            "typeName": {
              "id": 1919,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1918,
                "name": "EnumerableSet.UintSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4441,
                "src": "233:21:9"
              },
              "referencedDeclaration": 4441,
              "src": "233:21:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$4441_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "canonicalName": "Factoring.Product",
            "id": 1929,
            "members": [
              {
                "constant": false,
                "id": 1922,
                "mutability": "mutable",
                "name": "_borrower",
                "nameLocation": "294:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "286:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1921,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1924,
                "mutability": "mutable",
                "name": "_factoringDate",
                "nameLocation": "321:14:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "313:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1923,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1926,
                "mutability": "mutable",
                "name": "_factoringAmount",
                "nameLocation": "353:16:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "345:24:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1925,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "345:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1928,
                "mutability": "mutable",
                "name": "_validated",
                "nameLocation": "384:10:9",
                "nodeType": "VariableDeclaration",
                "scope": 1929,
                "src": "379:15:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1927,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Product",
            "nameLocation": "268:7:9",
            "nodeType": "StructDefinition",
            "scope": 2134,
            "src": "261:140:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1934,
            "mutability": "mutable",
            "name": "_subscriptions",
            "nameLocation": "444:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 2134,
            "src": "407:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
              "typeString": "mapping(uint256 => struct Factoring.Product)"
            },
            "typeName": {
              "id": 1933,
              "keyType": {
                "id": 1930,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "407:28:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                "typeString": "mapping(uint256 => struct Factoring.Product)"
              },
              "valueType": {
                "id": 1932,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1931,
                  "name": "Product",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1929,
                  "src": "427:7:9"
                },
                "referencedDeclaration": 1929,
                "src": "427:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Product_$1929_storage_ptr",
                  "typeString": "struct Factoring.Product"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1959,
              "nodeType": "Block",
              "src": "707:111:9",
              "statements": [
                {
                  "expression": {
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1942,
                      "name": "_issuingBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2155,
                      "src": "717:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1943,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3959,
                        "src": "732:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:12:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "717:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1946,
                  "nodeType": "ExpressionStatement",
                  "src": "717:27:9"
                },
                {
                  "expression": {
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1947,
                      "name": "medToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "754:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MED_$3515",
                        "typeString": "contract MED"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1949,
                          "name": "medToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1937,
                          "src": "769:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1948,
                        "name": "MED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3515,
                        "src": "765:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MED_$3515_$",
                          "typeString": "type(contract MED)"
                        }
                      },
                      "id": 1950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "765:14:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MED_$3515",
                        "typeString": "contract MED"
                      }
                    },
                    "src": "754:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MED_$3515",
                      "typeString": "contract MED"
                    }
                  },
                  "id": 1952,
                  "nodeType": "ExpressionStatement",
                  "src": "754:25:9"
                },
                {
                  "expression": {
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1953,
                      "name": "fpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2153,
                      "src": "789:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FP_$3652",
                        "typeString": "contract FP"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1955,
                          "name": "fpToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1939,
                          "src": "802:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1954,
                        "name": "FP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "799:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FP_$3652_$",
                          "typeString": "type(contract FP)"
                        }
                      },
                      "id": 1956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:12:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FP_$3652",
                        "typeString": "contract FP"
                      }
                    },
                    "src": "789:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FP_$3652",
                      "typeString": "contract FP"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "789:22:9"
                }
              ]
            },
            "documentation": {
              "id": 1935,
              "nodeType": "StructuredDocumentation",
              "src": "465:187:9",
              "text": " param minimumAmount      minimum amount deposited\n param dayDuration        duration of the DAT (in days)\n param interestRate       interest rate of the DAT"
            },
            "id": 1960,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1937,
                  "mutability": "mutable",
                  "name": "medToken_",
                  "nameLocation": "678:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1960,
                  "src": "670:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "fpToken_",
                  "nameLocation": "697:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1960,
                  "src": "689:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "669:37:9"
            },
            "returnParameters": {
              "id": 1941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:9"
            },
            "scope": 2134,
            "src": "657:161:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "964:243:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1971,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3959,
                          "src": "989:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "989:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1003:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 1968,
                        "name": "fpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "974:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FP_$3652",
                          "typeString": "contract FP"
                        }
                      },
                      "id": 1970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3632,
                      "src": "974:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint16) external"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "974:31:9"
                },
                {
                  "assignments": [
                    1977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1977,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1023:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2001,
                      "src": "1015:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1015:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1981,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1978,
                        "name": "fpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "1033:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FP_$3652",
                          "typeString": "contract FP"
                        }
                      },
                      "id": 1979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentTokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3583,
                      "src": "1033:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1015:45:9"
                },
                {
                  "expression": {
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1982,
                        "name": "_subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "1070:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                          "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                        }
                      },
                      "id": 1984,
                      "indexExpression": {
                        "id": 1983,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1977,
                        "src": "1085:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1070:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_storage",
                        "typeString": "struct Factoring.Product storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1986,
                          "name": "borrower_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1965,
                          "src": "1104:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1987,
                              "name": "medToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "1115:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MED_$3515",
                                "typeString": "contract MED"
                              }
                            },
                            "id": 1988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "daysElapsed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3138,
                            "src": "1115:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1990,
                          "name": "invoiceAmount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1963,
                          "src": "1139:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1155:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1985,
                        "name": "Product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "1096:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Product_$1929_storage_ptr_$",
                          "typeString": "type(struct Factoring.Product storage pointer)"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1096:65:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product memory"
                      }
                    },
                    "src": "1070:91:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:91:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1998,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1977,
                        "src": "1192:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1995,
                        "name": "_subscriptionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "1171:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4441_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 1997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4462,
                      "src": "1171:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4441_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4441_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2000,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:29:9"
                }
              ]
            },
            "documentation": {
              "id": 1961,
              "nodeType": "StructuredDocumentation",
              "src": "824:56:9",
              "text": " Get a token in exchange of an invoice"
            },
            "functionSelector": "2e9853ec",
            "id": 2002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellInvoice",
            "nameLocation": "894:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "invoiceAmount_",
                  "nameLocation": "914:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "906:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1965,
                  "mutability": "mutable",
                  "name": "borrower_",
                  "nameLocation": "938:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "930:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:43:9"
            },
            "returnParameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:9"
            },
            "scope": 2134,
            "src": "885:322:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "1331:337:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2010,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2005,
                            "src": "1361:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2009,
                          "name": "isSuscribed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2183,
                          "src": "1349:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1349:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4578697374696e6720466163746f72696e6720737562736372697074696f6e",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        },
                        "value": "Existing Factoring subscription"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        }
                      ],
                      "id": 2008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1341:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:64:9"
                },
                {
                  "assignments": [
                    2017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "mutability": "mutable",
                      "name": "prod",
                      "nameLocation": "1430:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2045,
                      "src": "1415:19:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product"
                      },
                      "typeName": {
                        "id": 2016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2015,
                          "name": "Product",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1929,
                          "src": "1415:7:9"
                        },
                        "referencedDeclaration": 1929,
                        "src": "1415:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$1929_storage_ptr",
                          "typeString": "struct Factoring.Product"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2021,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2018,
                      "name": "_subscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "1437:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                        "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                      }
                    },
                    "id": 2020,
                    "indexExpression": {
                      "id": 2019,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2005,
                      "src": "1452:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1437:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1415:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2023,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1478:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1478:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2025,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3959,
                            "src": "1496:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1496:12:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1478:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626f72726f7765722063616e2076616c6964617465",
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1510:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58e78d0cbe6d1dcc75d8c8c33ad3d014c4c4bd822f695b3b037f71a6c6d07a36",
                          "typeString": "literal_string \"Only borrower can validate\""
                        },
                        "value": "Only borrower can validate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58e78d0cbe6d1dcc75d8c8c33ad3d014c4c4bd822f695b3b037f71a6c6d07a36",
                          "typeString": "literal_string \"Only borrower can validate\""
                        }
                      ],
                      "id": 2022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1470:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:69:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2030,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:69:9"
                },
                {
                  "expression": {
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2031,
                        "name": "_subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "1549:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                          "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                        }
                      },
                      "id": 2033,
                      "indexExpression": {
                        "id": 2032,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2005,
                        "src": "1564:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1549:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_storage",
                        "typeString": "struct Factoring.Product storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2035,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1596:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1596:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 2037,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1612:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_factoringDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1924,
                          "src": "1612:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 2039,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "1633:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_factoringAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1926,
                          "src": "1633:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1656:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2034,
                        "name": "Product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "1588:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Product_$1929_storage_ptr_$",
                          "typeString": "type(struct Factoring.Product storage pointer)"
                        }
                      },
                      "id": 2042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1588:73:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product memory"
                      }
                    },
                    "src": "1549:112:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:112:9"
                }
              ]
            },
            "documentation": {
              "id": 2003,
              "nodeType": "StructuredDocumentation",
              "src": "1213:56:9",
              "text": " Get a token in exchange of an invoice"
            },
            "functionSelector": "3b56c4c7",
            "id": 2046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateInvoice",
            "nameLocation": "1283:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2005,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1307:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "1299:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:17:9"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:0:9"
            },
            "scope": 2134,
            "src": "1274:394:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2100,
              "nodeType": "Block",
              "src": "1800:380:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2054,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "1830:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2053,
                          "name": "isSuscribed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2183,
                          "src": "1818:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1818:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4578697374696e6720466163746f72696e6720737562736372697074696f6e",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        },
                        "value": "Existing Factoring subscription"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f929f9dfbb73a1dc32c493668f72efacfa4726b332efdd7beb56de1b2e0d9c4e",
                          "typeString": "literal_string \"Existing Factoring subscription\""
                        }
                      ],
                      "id": 2052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1810:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:64:9"
                },
                {
                  "assignments": [
                    2061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2061,
                      "mutability": "mutable",
                      "name": "prod",
                      "nameLocation": "1899:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2100,
                      "src": "1884:19:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                        "typeString": "struct Factoring.Product"
                      },
                      "typeName": {
                        "id": 2060,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2059,
                          "name": "Product",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1929,
                          "src": "1884:7:9"
                        },
                        "referencedDeclaration": 1929,
                        "src": "1884:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$1929_storage_ptr",
                          "typeString": "struct Factoring.Product"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2065,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2062,
                      "name": "_subscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "1906:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                        "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                      }
                    },
                    "id": 2064,
                    "indexExpression": {
                      "id": 2063,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "1921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1906:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$1929_storage",
                      "typeString": "struct Factoring.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1884:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2067,
                            "name": "prod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2061,
                            "src": "1947:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                              "typeString": "struct Factoring.Product memory"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1947:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2069,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3959,
                            "src": "1965:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1965:12:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1947:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626f72726f7765722063616e20706179",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1979:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1fd5effde376710ae4f92451e73ddae95c884711acb221676628408d4902985",
                          "typeString": "literal_string \"Only borrower can pay\""
                        },
                        "value": "Only borrower can pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1fd5effde376710ae4f92451e73ddae95c884711acb221676628408d4902985",
                          "typeString": "literal_string \"Only borrower can pay\""
                        }
                      ],
                      "id": 2066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1939:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:64:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2078,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3959,
                          "src": "2035:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2035:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2082,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "2065:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2080,
                            "name": "fpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "2049:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FP_$3652",
                              "typeString": "contract FP"
                            }
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "2049:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2049:24:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2084,
                          "name": "prod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2061,
                          "src": "2075:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_memory_ptr",
                            "typeString": "struct Factoring.Product memory"
                          }
                        },
                        "id": 2085,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_factoringAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1926,
                        "src": "2075:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2075,
                        "name": "medToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2150,
                        "src": "2013:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MED_$3515",
                          "typeString": "contract MED"
                        }
                      },
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 263,
                      "src": "2013:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:84:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:84:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2091,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "2123:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2088,
                        "name": "fpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "2107:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FP_$3652",
                          "typeString": "contract FP"
                        }
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3651,
                      "src": "2107:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2093,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:24:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2097,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "2165:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2094,
                        "name": "_subscriptionIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "2141:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$4441_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 2096,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4483,
                      "src": "2141:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$4441_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$4441_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2099,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2047,
              "nodeType": "StructuredDocumentation",
              "src": "1674:69:9",
              "text": " Pay the owner of the FP NFT invoice representation"
            },
            "functionSelector": "ac60a6cd",
            "id": 2101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payInvoice",
            "nameLocation": "1757:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1776:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2101,
                  "src": "1768:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:17:9"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:9"
            },
            "scope": 2134,
            "src": "1748:432:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2132,
              "nodeType": "Block",
              "src": "2285:226:9",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2114,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2316:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2116,
                          "indexExpression": {
                            "id": 2115,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2331:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2316:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "2316:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2118,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2363:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2120,
                          "indexExpression": {
                            "id": 2119,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2378:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2363:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_factoringDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1924,
                        "src": "2363:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2122,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2415:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2124,
                          "indexExpression": {
                            "id": 2123,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2430:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2415:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_factoringAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1926,
                        "src": "2415:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2126,
                            "name": "_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "2469:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$1929_storage_$",
                              "typeString": "mapping(uint256 => struct Factoring.Product storage ref)"
                            }
                          },
                          "id": 2128,
                          "indexExpression": {
                            "id": 2127,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "2484:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2469:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Product_$1929_storage",
                            "typeString": "struct Factoring.Product storage ref"
                          }
                        },
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_validated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1928,
                        "src": "2469:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2130,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2302:202:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(address,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 2113,
                  "id": 2131,
                  "nodeType": "Return",
                  "src": "2295:209:9"
                }
              ]
            },
            "functionSelector": "b9db15b4",
            "id": 2133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProduct",
            "nameLocation": "2195:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2214:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2206:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2205:17:9"
            },
            "returnParameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2252:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2261:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2270:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2133,
                  "src": "2279:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:33:9"
            },
            "scope": 2134,
            "src": "2186:325:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2135,
        "src": "165:2349:9"
      }
    ],
    "src": "33:2481:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2021-05-13T11:39:17.991Z",
  "devdoc": {
    "author": "AshtonIzmev",
    "details": "Banking smart contracts - Factoring",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "param minimumAmount      minimum amount deposited param dayDuration        duration of the DAT (in days) param interestRate       interest rate of the DAT"
      },
      "payInvoice(uint256)": {
        "notice": "Pay the owner of the FP NFT invoice representation"
      },
      "sellInvoice(uint256,address)": {
        "notice": "Get a token in exchange of an invoice"
      },
      "validateInvoice(uint256)": {
        "notice": "Get a token in exchange of an invoice"
      }
    },
    "version": 1
  }
}